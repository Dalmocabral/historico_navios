# seu_app/views.py

# Importa fun√ß√µes e classes essenciais do Django
from django.shortcuts import render, redirect   # render: renderiza templates | redirect: redireciona para outra rota
from django.contrib.auth.decorators import login_required  # login_required: obriga o usu√°rio a estar logado para acessar a view
from django.contrib import messages  # messages: usado para exibir mensagens de sucesso/erro no template
from ..forms import ColaboradorForm  # importa o formul√°rio personalizado do colaborador

# üîí A view s√≥ pode ser acessada por usu√°rios autenticados
@login_required
def cadastrar_colaborador(request):
    # Verifica se o m√©todo da requisi√ß√£o √© POST (quando o usu√°rio clicou no "Salvar")
    if request.method == "POST":
        # Preenche o formul√°rio com os dados enviados pelo usu√°rio
        form = ColaboradorForm(request.POST)

        # Valida se os dados recebidos est√£o corretos (conforme regras do formul√°rio/model)
        if form.is_valid():
            form.save()  # Salva o colaborador no banco de dados
            # Cria uma mensagem de sucesso que ser√° exibida no template
            messages.success(request, "Colaborador cadastrado com sucesso!")
            
            # üîÑ Redireciona para a mesma view (mas com m√©todo GET),
            # isso evita que o formul√°rio seja reenviado caso o usu√°rio atualize a p√°gina.
            return redirect('cadastrar_colaborador')
        else:
            # Caso o formul√°rio seja inv√°lido, cria uma mensagem de erro
            # Os erros espec√≠ficos tamb√©m ficam dispon√≠veis em "form.errors"
            messages.error(request, "Erro ao cadastrar. Por favor, verifique os campos e tente novamente.")
    else:
        # Caso a requisi√ß√£o seja GET (primeiro acesso ou ap√≥s o redirect),
        # cria um formul√°rio vazio para o usu√°rio preencher
        form = ColaboradorForm()

    # Renderiza o template HTML, passando o formul√°rio para ser exibido
    return render(request, "historico/cadastrar_colaborador.html", {"form": form})
